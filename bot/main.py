# application = Application.builder().token("6338177542:AAFS7Ynqe6tu_ftGcNTP2fZPwK1uxPztOp0").build()

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, CallbackQueryHandler

ADMIN_ID = 945368215

async def start(update: Update, context: CallbackContext):
    user = update.message.from_user
    buttons = [
        [InlineKeyboardButton("–°–¥–µ–ª–∞—Ç—å –ó–∞–∫–∞–∑", callback_data='order')],
        [InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –í–æ–ø—Ä–æ—Å", callback_data='question')]
    ]
    reply_markup = InlineKeyboardMarkup(buttons)
    
    await update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!", reply_markup=reply_markup)
    await update.message.reply_text("–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É ¬´Shop¬ª üëá")

async def handle_message(update: Update, context: CallbackContext):
    user = update.message.from_user
    text = update.message.text

    if text == "–°–¥–µ–ª–∞—Ç—å –ó–∞–∫–∞–∑":
        await update.message.reply_text("–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —É–∂–µ –±–µ–∂–∏—Ç –∫ –í–∞–º –≤ –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üèÉ‚Äç‚ôÄÔ∏è")
        await context.bot.send_message(ADMIN_ID, f"–ó–∞–∫–∞–∑.\n–ö–ª–∏–µ–Ω—Ç: @{user.username}!")
    elif text == "–ó–∞–¥–∞—Ç—å –í–æ–ø—Ä–æ—Å":
        await update.message.reply_text("–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —É–∂–µ –±–µ–∂–∏—Ç –∫ –í–∞–º –≤ –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üèÉ‚Äç‚ôÄÔ∏è")
        await context.bot.send_message(ADMIN_ID, f"–í–æ–ø—Ä–æ—Å.\n–ö–ª–∏–µ–Ω—Ç: @{user.username}!")

async def set_menu_button(update: Update, context: CallbackContext):
    await update.message.reply_text("–í—ã–∑–≤–∞—Ç—å –º–µ–Ω—é –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥, –Ω–æ —Å–∞–π—Ç –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è.")

async def button_click_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    user = query.from_user 
    await query.answer()
    
    if query.data == 'order':
        await context.bot.send_message(ADMIN_ID, f"–ó–∞–∫–∞–∑.\n–ö–ª–∏–µ–Ω—Ç: @{user.username}!")
        await query.message.reply_text("–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —É–∂–µ –±–µ–∂–∏—Ç –∫ –í–∞–º –≤ –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üèÉ‚Äç‚ôÄÔ∏è")
    elif query.data == 'question':
        await context.bot.send_message(ADMIN_ID, f"–í–æ–ø—Ä–æ—Å.\n–ö–ª–∏–µ–Ω—Ç: @{user.username}!")
        await query.message.reply_text("–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —É–∂–µ –±–µ–∂–∏—Ç –∫ –í–∞–º –≤ –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üèÉ‚Äç‚ôÄÔ∏è")

def main():
    application = Application.builder().token("6338177542:AAFS7Ynqe6tu_ftGcNTP2fZPwK1uxPztOp0").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("setmenubutton", set_menu_button))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(CallbackQueryHandler(button_click_handler))
    
    application.run_polling()

if __name__ == '__main__':
    main()
